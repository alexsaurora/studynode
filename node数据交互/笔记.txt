程序员最重要的是——内功：
1，算法
2，设计模式
3，架构

===============================================================================
web服务器
1，返回文件
2，数据交互(GET、POST)
3，数据库操作

get
  在url里传参数，没有body不能通过body传参
  能传输的数据小(32k)

  let {pathname,query} = url.parse(req.url,true);
post
  作为body传输
  能传输的数据大(1G)

===============================================================================
一个大数据包为啥要切成一堆小包
1，方便所有人
2，容错率高
=====================================================================

url.parse(整个url);
querystring.parse(携带的参数);

===============================================================================
接口：
1，商定接口文档
2，写接口


注册登录接口
注册：
/reg?user=xxx&pass=xxx
=>{err:0,msg:'说明'}

登录：
/login?user=xxx&pass=xxx
=>{err:0,msg:'说明'}

===============================================================================

安全性：99%的漏洞都是懒

1，一切来自前台的数据都不可信
2，前后台都得进行数据校验
前台校验：为了用户体验
后台校验：为了防止请求伪造，提高安全性

===============================================================================
数据库：
1,文件型数据库————sqlLite
  简单、小 多用于手机(android)
2,关系型数据库————Mysql、Oracle    最常见、最常用
  数据之间是有关系的
3,文档型数据库————MongoDB
  直接存储异构数据——方便
4,其他数据库


大型系统的主数据库一定是关系型数据库
mysql 开源免费 适合做普通应用
  性能很高，安全性很高，容灾能力略差

oracle 花钱  适合金融、医疗领域
  容灾能力特别强


======================
SQL与NoSql
数据库别名为SQL
  性能略差
noSQL没有复杂的关系、对性能有极高的要求
  redis、memcached、hypertable、bigtable

=============================
数据仓库————海量数据
